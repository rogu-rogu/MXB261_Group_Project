function samples = Latin_Hypercube_Sampling(n,d)
% LATIN_HYPERCUBE_SAMPING - Generates randomised but distributed parameter
% values using Latin Hypercube sampling.
% 
%   samples = Latin_Hypercube_Sampling(n,d) divides the d-dimensional space 
%   where all dimensions are ∈[0,1], into n*d hypercubes, and randomly
%   assigns a sample within n many hypercubes. The chosen hypercubes must
%   satisfy the Latin Hypercube requirement:
%       * There is one sample for every parameter interval (n intervals)
%       * There is no more than one sample within each hyperplane (i.e,
%       samples do not share parameter intervals, if there is a sample in
%       hypercube with parameter interval A is 3, there are no samples 
%       within hypercubes where the parameter interval A is also 3.)
%
%   Input Arguments
%     n - integer
%       Number of samples to generate, and the number of intervals along a
%       parameter.
%     d - integer
%       Number of dimensions, where each dimension corresponds to a
%       parameter ranging from 0 to 1.
%
%   Output Arguments
%     samples - (n x d) double matrix
%       d*n many random samples generated by Latin Hypercube Sampling. The
%       columns contain the parameter values of each sample.

%% Latin Hypercube Sampling
scale = 0:(1/n):1; scale(end) = []; % Marks the beginning position of...
%...n many Latin intervals in ∈[0,1]. Divides space into hypercubes

lhs_order = zeros(n,d); % Assign d-tuples such that no coordinates exist...
for i = 1:d, lhs_order(:,i) = randperm(n); end %...on the same hyperplane

u = rand(n,d)/n; % Determines d*n random numbers in (1/n) length hypercube
samples = u + scale(lhs_order); % Shifts samples into their intervals

end